/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Organizations;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrganizationsRecord extends UpdatableRecordImpl<OrganizationsRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.organizations.name</code>.
     */
    public OrganizationsRecord setName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.organizations.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.organizations.tin</code>.
     */
    public OrganizationsRecord setTin(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.organizations.tin</code>.
     */
    public String getTin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.organizations.current_account</code>.
     */
    public OrganizationsRecord setCurrentAccount(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.organizations.current_account</code>.
     */
    public String getCurrentAccount() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Organizations.ORGANIZATIONS.NAME;
    }

    @Override
    public Field<String> field2() {
        return Organizations.ORGANIZATIONS.TIN;
    }

    @Override
    public Field<String> field3() {
        return Organizations.ORGANIZATIONS.CURRENT_ACCOUNT;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String component2() {
        return getTin();
    }

    @Override
    public String component3() {
        return getCurrentAccount();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String value2() {
        return getTin();
    }

    @Override
    public String value3() {
        return getCurrentAccount();
    }

    @Override
    public OrganizationsRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public OrganizationsRecord value2(String value) {
        setTin(value);
        return this;
    }

    @Override
    public OrganizationsRecord value3(String value) {
        setCurrentAccount(value);
        return this;
    }

    @Override
    public OrganizationsRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrganizationsRecord
     */
    public OrganizationsRecord() {
        super(Organizations.ORGANIZATIONS);
    }

    /**
     * Create a detached, initialised OrganizationsRecord
     */
    public OrganizationsRecord(String name, String tin, String currentAccount) {
        super(Organizations.ORGANIZATIONS);

        setName(name);
        setTin(tin);
        setCurrentAccount(currentAccount);
    }
}
