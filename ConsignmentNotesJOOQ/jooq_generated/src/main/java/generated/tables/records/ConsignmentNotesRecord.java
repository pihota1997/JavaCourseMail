/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.ConsignmentNotes;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConsignmentNotesRecord extends UpdatableRecordImpl<ConsignmentNotesRecord> implements Record3<Integer, LocalDate, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.consignment_notes.no</code>.
     */
    public ConsignmentNotesRecord setNo(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_notes.no</code>.
     */
    public Integer getNo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.consignment_notes.date</code>.
     */
    public ConsignmentNotesRecord setDate(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_notes.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.consignment_notes.organization</code>.
     */
    public ConsignmentNotesRecord setOrganization(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_notes.organization</code>.
     */
    public String getOrganization() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, LocalDate, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, LocalDate, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ConsignmentNotes.CONSIGNMENT_NOTES.NO;
    }

    @Override
    public Field<LocalDate> field2() {
        return ConsignmentNotes.CONSIGNMENT_NOTES.DATE;
    }

    @Override
    public Field<String> field3() {
        return ConsignmentNotes.CONSIGNMENT_NOTES.ORGANIZATION;
    }

    @Override
    public Integer component1() {
        return getNo();
    }

    @Override
    public LocalDate component2() {
        return getDate();
    }

    @Override
    public String component3() {
        return getOrganization();
    }

    @Override
    public Integer value1() {
        return getNo();
    }

    @Override
    public LocalDate value2() {
        return getDate();
    }

    @Override
    public String value3() {
        return getOrganization();
    }

    @Override
    public ConsignmentNotesRecord value1(Integer value) {
        setNo(value);
        return this;
    }

    @Override
    public ConsignmentNotesRecord value2(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public ConsignmentNotesRecord value3(String value) {
        setOrganization(value);
        return this;
    }

    @Override
    public ConsignmentNotesRecord values(Integer value1, LocalDate value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConsignmentNotesRecord
     */
    public ConsignmentNotesRecord() {
        super(ConsignmentNotes.CONSIGNMENT_NOTES);
    }

    /**
     * Create a detached, initialised ConsignmentNotesRecord
     */
    public ConsignmentNotesRecord(Integer no, LocalDate date, String organization) {
        super(ConsignmentNotes.CONSIGNMENT_NOTES);

        setNo(no);
        setDate(date);
        setOrganization(organization);
    }
}
