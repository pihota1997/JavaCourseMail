/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Positions;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PositionsRecord extends UpdatableRecordImpl<PositionsRecord> implements Record5<Integer, BigDecimal, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.positions.no</code>.
     */
    public PositionsRecord setNo(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.positions.no</code>.
     */
    public Integer getNo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.positions.price</code>.
     */
    public PositionsRecord setPrice(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.positions.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>public.positions.product</code>.
     */
    public PositionsRecord setProduct(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.positions.product</code>.
     */
    public String getProduct() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.positions.quantity</code>.
     */
    public PositionsRecord setQuantity(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.positions.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.positions.consignment_note_no</code>.
     */
    public PositionsRecord setConsignmentNoteNo(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.positions.consignment_note_no</code>.
     */
    public Integer getConsignmentNoteNo() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, BigDecimal, String, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, BigDecimal, String, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Positions.POSITIONS.NO;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Positions.POSITIONS.PRICE;
    }

    @Override
    public Field<String> field3() {
        return Positions.POSITIONS.PRODUCT;
    }

    @Override
    public Field<Integer> field4() {
        return Positions.POSITIONS.QUANTITY;
    }

    @Override
    public Field<Integer> field5() {
        return Positions.POSITIONS.CONSIGNMENT_NOTE_NO;
    }

    @Override
    public Integer component1() {
        return getNo();
    }

    @Override
    public BigDecimal component2() {
        return getPrice();
    }

    @Override
    public String component3() {
        return getProduct();
    }

    @Override
    public Integer component4() {
        return getQuantity();
    }

    @Override
    public Integer component5() {
        return getConsignmentNoteNo();
    }

    @Override
    public Integer value1() {
        return getNo();
    }

    @Override
    public BigDecimal value2() {
        return getPrice();
    }

    @Override
    public String value3() {
        return getProduct();
    }

    @Override
    public Integer value4() {
        return getQuantity();
    }

    @Override
    public Integer value5() {
        return getConsignmentNoteNo();
    }

    @Override
    public PositionsRecord value1(Integer value) {
        setNo(value);
        return this;
    }

    @Override
    public PositionsRecord value2(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public PositionsRecord value3(String value) {
        setProduct(value);
        return this;
    }

    @Override
    public PositionsRecord value4(Integer value) {
        setQuantity(value);
        return this;
    }

    @Override
    public PositionsRecord value5(Integer value) {
        setConsignmentNoteNo(value);
        return this;
    }

    @Override
    public PositionsRecord values(Integer value1, BigDecimal value2, String value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PositionsRecord
     */
    public PositionsRecord() {
        super(Positions.POSITIONS);
    }

    /**
     * Create a detached, initialised PositionsRecord
     */
    public PositionsRecord(Integer no, BigDecimal price, String product, Integer quantity, Integer consignmentNoteNo) {
        super(Positions.POSITIONS);

        setNo(no);
        setPrice(price);
        setProduct(product);
        setQuantity(quantity);
        setConsignmentNoteNo(consignmentNoteNo);
    }
}
