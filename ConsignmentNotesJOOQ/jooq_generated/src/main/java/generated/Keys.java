/*
 * This file is generated by jOOQ.
 */
package generated;


import generated.tables.ConsignmentNotes;
import generated.tables.Organizations;
import generated.tables.Positions;
import generated.tables.Products;
import generated.tables.records.ConsignmentNotesRecord;
import generated.tables.records.OrganizationsRecord;
import generated.tables.records.PositionsRecord;
import generated.tables.records.ProductsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ConsignmentNotesRecord> CONSIGNMENT_NOTES_PK = Internal.createUniqueKey(ConsignmentNotes.CONSIGNMENT_NOTES, DSL.name("consignment_notes_pk"), new TableField[] { ConsignmentNotes.CONSIGNMENT_NOTES.NO }, true);
    public static final UniqueKey<OrganizationsRecord> ORGANIZATIONS_PK = Internal.createUniqueKey(Organizations.ORGANIZATIONS, DSL.name("organizations_pk"), new TableField[] { Organizations.ORGANIZATIONS.TIN }, true);
    public static final UniqueKey<PositionsRecord> POSITIONS_PK = Internal.createUniqueKey(Positions.POSITIONS, DSL.name("positions_pk"), new TableField[] { Positions.POSITIONS.NO }, true);
    public static final UniqueKey<ProductsRecord> PRODUCTS_PK = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_pk"), new TableField[] { Products.PRODUCTS.INTERNAL_CODE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ConsignmentNotesRecord, OrganizationsRecord> CONSIGNMENT_NOTES__CONSIGNMENT_NOTES_ORGANIZATION_FKEY = Internal.createForeignKey(ConsignmentNotes.CONSIGNMENT_NOTES, DSL.name("consignment_notes_organization_fkey"), new TableField[] { ConsignmentNotes.CONSIGNMENT_NOTES.ORGANIZATION }, Keys.ORGANIZATIONS_PK, new TableField[] { Organizations.ORGANIZATIONS.TIN }, true);
    public static final ForeignKey<PositionsRecord, ConsignmentNotesRecord> POSITIONS__POSITIONS_CONSIGNMENT_NOTE_NO_FKEY = Internal.createForeignKey(Positions.POSITIONS, DSL.name("positions_consignment_note_no_fkey"), new TableField[] { Positions.POSITIONS.CONSIGNMENT_NOTE_NO }, Keys.CONSIGNMENT_NOTES_PK, new TableField[] { ConsignmentNotes.CONSIGNMENT_NOTES.NO }, true);
    public static final ForeignKey<PositionsRecord, ProductsRecord> POSITIONS__POSITIONS_PRODUCT_FKEY = Internal.createForeignKey(Positions.POSITIONS, DSL.name("positions_product_fkey"), new TableField[] { Positions.POSITIONS.PRODUCT }, Keys.PRODUCTS_PK, new TableField[] { Products.PRODUCTS.INTERNAL_CODE }, true);
}
